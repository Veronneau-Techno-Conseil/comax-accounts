apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "comax-accounts.fullname" . }}
  labels:
    {{- include "comax-accounts.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "comax-accounts.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "comax-accounts.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "comax-accounts.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
      - name: certs
        secret:
          secretName: {{ include "comax-accounts.certSecretName" . }}

      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
          - name: certs
            mountPath: {{ .Values.authCert }}
            subPath: tls.crt
          - name: certs
            mountPath: {{ .Values.authKey }}
            subPath: tls.key
          env:
          - name: DbConfig__ConnectionString
            valueFrom:
              secretKeyRef:
                name: {{ include "comax-accounts.secretName" . }}
                key: CONNSTR
          - name: AuthCert
            value: {{ .Values.authCert }}
          - name: AuthKey
            value: {{ .Values.authKey }}
          - name: Urls
            value: {{ .Values.urls }}
          - name: CaptchaSecret
            value: {{ .Values.captchaSecret }}
          - name: PubCaptcha
            value: {{ .Values.pubCaptcha }}
          livenessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
          readinessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
